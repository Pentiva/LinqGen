// LinqGen.Generator, Maxwell Keonwoo Kang <code.athei@gmail.com>, 2022

using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.Text;

namespace Cathei.LinqGen.Generator
{
    using static SyntaxFactory;
    using static CodeGenUtils;

    public static class FileTemplate
    {
        private static readonly SyntaxTree TemplateSyntaxTree = CSharpSyntaxTree.ParseText(@"// DO NOT EDIT
// Generated by LinqGen.Generator

using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using Cathei.LinqGen;
using Cathei.LinqGen.Hidden;
");

        public static SourceText Render(IEnumerable<MemberDeclarationSyntax> members)
        {
            var root = TemplateSyntaxTree.GetCompilationUnitRoot();

            root = root.AddMembers(members.ToArray());

            return root.NormalizeWhitespace().GetText(Encoding.UTF8);
        }
    }
}